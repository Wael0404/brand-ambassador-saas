version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: brand_ambassador_postgres
    environment:
      POSTGRES_DB: brand_ambassador_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - brand_ambassador_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: brand_ambassador_backend
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: brand_ambassador_saas
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 7d
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key_here
      STRIPE_WEBHOOK_SECRET: whsec_your_webhook_secret_here
      APP_PORT: 3001
      NODE_ENV: development
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 5242880
      FRONTEND_URL: http://localhost:3000
      APP_URL: http://localhost:3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - brand_ambassador_network
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: brand_ambassador_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - brand_ambassador_network
    command: npm run dev

volumes:
  postgres_data:

networks:
  brand_ambassador_network:
    driver: bridge
